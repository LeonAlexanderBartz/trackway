{% extends "AppBundle::layoutSidebar.html.twig" %}

{% block class %}{{ parent() }} reports{% endblock %}

{% block header %}<h1>{{ 'reports.template.index.title'|trans }}</h1>{% endblock %}

{% block content %}
    <div class="box-body">
        <p>
            Please select a date range and click the 'Download' button to load your report.
        </p>

        <button class="btn btn-default" id="daterange-btn">
            <i class="fa fa-calendar"></i>&nbsp;
            <span></span>
            <i class="fa fa-caret-down"></i>
        </button>

        <a href="{{ path('timeentry_report_download', {_format: 'xls'}) }}" class="btn btn-primary" id="download-btn">
            Download
        </a>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        /**
         * Called if date range changed.
         *
         * @param startDate
         * @param endDate
         */
        function changeDateRange(startDate, endDate) {
            $('#daterange-btn').find('span').html(startDate.format('MMMM D, YYYY') + ' - ' + endDate.format('MMMM D, YYYY'));
            $('#download-btn').attr('href', Routing.generate('timeentry_report_download', {
                _format: 'xls',
                start: startDate.format('YYYYMMDD'),
                end: endDate.format('YYYYMMDD')
            }));

            console.log(startDate, endDate);
        }

        // Define initial date range (last month)
        var startDate = moment().subtract(1, 'month').startOf('month');
        var endDate = moment().subtract(1, 'month').endOf('month');

        // Init button
        changeDateRange(startDate, endDate);

        // Init date picker
        $('#daterange-btn').daterangepicker({
                    startDate: startDate,
                    endDate: endDate,
                    ranges: {
                        '{{ 'template.dateRange.today'|trans }}': [moment(), moment()],
                        '{{ 'template.dateRange.yesterday'|trans }}': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                        '{{ 'template.dateRange.thisWeek'|trans }}': [moment().startOf('week'), moment().endOf('week')],
                        '{{ 'template.dateRange.lastWeek'|trans }}': [moment().subtract(1, 'week').startOf('week'), moment().subtract(1, 'week').endOf('week')],
                        '{{ 'template.dateRange.thisMonth'|trans }}': [moment().startOf('month'), moment().endOf('month')],
                        '{{ 'template.dateRange.lastMonth'|trans }}': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                    },
                    applyClass: 'btn-default pull-left',
                    cancelClass: 'btn-default pull-right',
                    locale: {
                        applyLabel: '{{ 'template.dateRange.applyLabel'|trans }}',
                        cancelLabel: '{{ 'template.dateRange.cancelLabel'|trans }}',
                        fromLabel: '{{ 'template.dateRange.fromLabel'|trans }}',
                        toLabel: '{{ 'template.dateRange.toLabel'|trans }}',
                        customRangeLabel: '{{ 'template.dateRange.customRangeLabel'|trans }}',
                        // TODO: add translations for all values
                        daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr','Sa'],
                        monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
                    }
                },
                changeDateRange
        );
    </script>
{% endblock %}